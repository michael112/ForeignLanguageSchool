#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.18444
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ELrn")]
public partial class DataClassesDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertWariantyOdpowiedzi(WariantyOdpowiedzi instance);
  partial void UpdateWariantyOdpowiedzi(WariantyOdpowiedzi instance);
  partial void DeleteWariantyOdpowiedzi(WariantyOdpowiedzi instance);
  partial void InsertJezyki(Jezyki instance);
  partial void UpdateJezyki(Jezyki instance);
  partial void DeleteJezyki(Jezyki instance);
  partial void InsertKursy(Kursy instance);
  partial void UpdateKursy(Kursy instance);
  partial void DeleteKursy(Kursy instance);
  partial void InsertLangVersions(LangVersions instance);
  partial void UpdateLangVersions(LangVersions instance);
  partial void DeleteLangVersions(LangVersions instance);
  partial void InsertPoziomy(Poziomy instance);
  partial void UpdatePoziomy(Poziomy instance);
  partial void DeletePoziomy(Poziomy instance);
  partial void InsertSites(Sites instance);
  partial void UpdateSites(Sites instance);
  partial void DeleteSites(Sites instance);
  partial void InsertTestyZamkniete(TestyZamkniete instance);
  partial void UpdateTestyZamkniete(TestyZamkniete instance);
  partial void DeleteTestyZamkniete(TestyZamkniete instance);
  partial void InsertTestyZamknietePytania(TestyZamknietePytania instance);
  partial void UpdateTestyZamknietePytania(TestyZamknietePytania instance);
  partial void DeleteTestyZamknietePytania(TestyZamknietePytania instance);
  partial void InsertUsers(Users instance);
  partial void UpdateUsers(Users instance);
  partial void DeleteUsers(Users instance);
  partial void InsertMaterialy(Materialy instance);
  partial void UpdateMaterialy(Materialy instance);
  partial void DeleteMaterialy(Materialy instance);
  #endregion
	
	public DataClassesDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["ELrnConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public DataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<Content> Content
	{
		get
		{
			return this.GetTable<Content>();
		}
	}
	
	public System.Data.Linq.Table<WariantyOdpowiedzi> WariantyOdpowiedzi
	{
		get
		{
			return this.GetTable<WariantyOdpowiedzi>();
		}
	}
	
	public System.Data.Linq.Table<Jezyki> Jezyki
	{
		get
		{
			return this.GetTable<Jezyki>();
		}
	}
	
	public System.Data.Linq.Table<KonsultacjeTerminy> KonsultacjeTerminy
	{
		get
		{
			return this.GetTable<KonsultacjeTerminy>();
		}
	}
	
	public System.Data.Linq.Table<KonsultacjeZapis> KonsultacjeZapis
	{
		get
		{
			return this.GetTable<KonsultacjeZapis>();
		}
	}
	
	public System.Data.Linq.Table<Kursy> Kursy
	{
		get
		{
			return this.GetTable<Kursy>();
		}
	}
	
	public System.Data.Linq.Table<LangVersions> LangVersions
	{
		get
		{
			return this.GetTable<LangVersions>();
		}
	}
	
	public System.Data.Linq.Table<Oceny> Oceny
	{
		get
		{
			return this.GetTable<Oceny>();
		}
	}
	
	public System.Data.Linq.Table<Poziomy> Poziomy
	{
		get
		{
			return this.GetTable<Poziomy>();
		}
	}
	
	public System.Data.Linq.Table<Sites> Sites
	{
		get
		{
			return this.GetTable<Sites>();
		}
	}
	
	public System.Data.Linq.Table<TestyZamkniete> TestyZamkniete
	{
		get
		{
			return this.GetTable<TestyZamkniete>();
		}
	}
	
	public System.Data.Linq.Table<TestyZamknietePytania> TestyZamknietePytania
	{
		get
		{
			return this.GetTable<TestyZamknietePytania>();
		}
	}
	
	public System.Data.Linq.Table<Users> Users
	{
		get
		{
			return this.GetTable<Users>();
		}
	}
	
	public System.Data.Linq.Table<Materialy> Materialy
	{
		get
		{
			return this.GetTable<Materialy>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Content")]
public partial class Content
{
	
	private int _SiteID;
	
	private int _LangVersion;
	
	private string _Header;
	
	private string _Content1;
	
	public Content()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL")]
	public int SiteID
	{
		get
		{
			return this._SiteID;
		}
		set
		{
			if ((this._SiteID != value))
			{
				this._SiteID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LangVersion", DbType="Int NOT NULL")]
	public int LangVersion
	{
		get
		{
			return this._LangVersion;
		}
		set
		{
			if ((this._LangVersion != value))
			{
				this._LangVersion = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Header", DbType="VarChar(50)")]
	public string Header
	{
		get
		{
			return this._Header;
		}
		set
		{
			if ((this._Header != value))
			{
				this._Header = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Content", Storage="_Content1", DbType="VarChar(2000) NOT NULL", CanBeNull=false)]
	public string Content1
	{
		get
		{
			return this._Content1;
		}
		set
		{
			if ((this._Content1 != value))
			{
				this._Content1 = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WariantyOdpowiedzi")]
public partial class WariantyOdpowiedzi : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDpytania;
	
	private int _IDodpowiedzi;
	
	private string _Tresc;
	
	private bool _CzyPoprawna;
	
	private EntityRef<TestyZamknietePytania> _TestyZamknietePytania;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDpytaniaChanging(int value);
    partial void OnIDpytaniaChanged();
    partial void OnIDodpowiedziChanging(int value);
    partial void OnIDodpowiedziChanged();
    partial void OnTrescChanging(string value);
    partial void OnTrescChanged();
    partial void OnCzyPoprawnaChanging(bool value);
    partial void OnCzyPoprawnaChanged();
    #endregion
	
	public WariantyOdpowiedzi()
	{
		this._TestyZamknietePytania = default(EntityRef<TestyZamknietePytania>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpytania", DbType="Int NOT NULL")]
	public int IDpytania
	{
		get
		{
			return this._IDpytania;
		}
		set
		{
			if ((this._IDpytania != value))
			{
				if (this._TestyZamknietePytania.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDpytaniaChanging(value);
				this.SendPropertyChanging();
				this._IDpytania = value;
				this.SendPropertyChanged("IDpytania");
				this.OnIDpytaniaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDodpowiedzi", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDodpowiedzi
	{
		get
		{
			return this._IDodpowiedzi;
		}
		set
		{
			if ((this._IDodpowiedzi != value))
			{
				this.OnIDodpowiedziChanging(value);
				this.SendPropertyChanging();
				this._IDodpowiedzi = value;
				this.SendPropertyChanged("IDodpowiedzi");
				this.OnIDodpowiedziChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tresc", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
	public string Tresc
	{
		get
		{
			return this._Tresc;
		}
		set
		{
			if ((this._Tresc != value))
			{
				this.OnTrescChanging(value);
				this.SendPropertyChanging();
				this._Tresc = value;
				this.SendPropertyChanged("Tresc");
				this.OnTrescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyPoprawna", DbType="Bit NOT NULL")]
	public bool CzyPoprawna
	{
		get
		{
			return this._CzyPoprawna;
		}
		set
		{
			if ((this._CzyPoprawna != value))
			{
				this.OnCzyPoprawnaChanging(value);
				this.SendPropertyChanging();
				this._CzyPoprawna = value;
				this.SendPropertyChanged("CzyPoprawna");
				this.OnCzyPoprawnaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestyZamknietePytania_WariantyOdpowiedzi", Storage="_TestyZamknietePytania", ThisKey="IDpytania", OtherKey="IDpytania", IsForeignKey=true)]
	public TestyZamknietePytania TestyZamknietePytania
	{
		get
		{
			return this._TestyZamknietePytania.Entity;
		}
		set
		{
			TestyZamknietePytania previousValue = this._TestyZamknietePytania.Entity;
			if (((previousValue != value) 
						|| (this._TestyZamknietePytania.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestyZamknietePytania.Entity = null;
					previousValue.WariantyOdpowiedzi.Remove(this);
				}
				this._TestyZamknietePytania.Entity = value;
				if ((value != null))
				{
					value.WariantyOdpowiedzi.Add(this);
					this._IDpytania = value.IDpytania;
				}
				else
				{
					this._IDpytania = default(int);
				}
				this.SendPropertyChanged("TestyZamknietePytania");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Jezyki")]
public partial class Jezyki : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _JezykID;
	
	private string _Nazwa;
	
	private EntitySet<Kursy> _Kursy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnJezykIDChanging(int value);
    partial void OnJezykIDChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
	
	public Jezyki()
	{
		this._Kursy = new EntitySet<Kursy>(new Action<Kursy>(this.attach_Kursy), new Action<Kursy>(this.detach_Kursy));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JezykID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int JezykID
	{
		get
		{
			return this._JezykID;
		}
		set
		{
			if ((this._JezykID != value))
			{
				this.OnJezykIDChanging(value);
				this.SendPropertyChanging();
				this._JezykID = value;
				this.SendPropertyChanged("JezykID");
				this.OnJezykIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
	public string Nazwa
	{
		get
		{
			return this._Nazwa;
		}
		set
		{
			if ((this._Nazwa != value))
			{
				this.OnNazwaChanging(value);
				this.SendPropertyChanging();
				this._Nazwa = value;
				this.SendPropertyChanged("Nazwa");
				this.OnNazwaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jezyki_Kursy", Storage="_Kursy", ThisKey="JezykID", OtherKey="Jezyk")]
	public EntitySet<Kursy> Kursy
	{
		get
		{
			return this._Kursy;
		}
		set
		{
			this._Kursy.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Kursy(Kursy entity)
	{
		this.SendPropertyChanging();
		entity.Jezyki = this;
	}
	
	private void detach_Kursy(Kursy entity)
	{
		this.SendPropertyChanging();
		entity.Jezyki = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KonsultacjeTerminy")]
public partial class KonsultacjeTerminy
{
	
	private int _IDprowadzacego;
	
	private System.Nullable<int> _LimitMiejsc;
	
	private string _TerminStaly;
	
	public KonsultacjeTerminy()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDprowadzacego", DbType="Int NOT NULL")]
	public int IDprowadzacego
	{
		get
		{
			return this._IDprowadzacego;
		}
		set
		{
			if ((this._IDprowadzacego != value))
			{
				this._IDprowadzacego = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LimitMiejsc", DbType="Int")]
	public System.Nullable<int> LimitMiejsc
	{
		get
		{
			return this._LimitMiejsc;
		}
		set
		{
			if ((this._LimitMiejsc != value))
			{
				this._LimitMiejsc = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TerminStaly", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string TerminStaly
	{
		get
		{
			return this._TerminStaly;
		}
		set
		{
			if ((this._TerminStaly != value))
			{
				this._TerminStaly = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KonsultacjeZapis")]
public partial class KonsultacjeZapis
{
	
	private int _IDprowadzacego;
	
	private int _IDkursanta;
	
	private System.DateTime _DokladnaData;
	
	private string _Temat;
	
	public KonsultacjeZapis()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDprowadzacego", DbType="Int NOT NULL")]
	public int IDprowadzacego
	{
		get
		{
			return this._IDprowadzacego;
		}
		set
		{
			if ((this._IDprowadzacego != value))
			{
				this._IDprowadzacego = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDkursanta", DbType="Int NOT NULL")]
	public int IDkursanta
	{
		get
		{
			return this._IDkursanta;
		}
		set
		{
			if ((this._IDkursanta != value))
			{
				this._IDkursanta = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DokladnaData", DbType="DateTime NOT NULL")]
	public System.DateTime DokladnaData
	{
		get
		{
			return this._DokladnaData;
		}
		set
		{
			if ((this._DokladnaData != value))
			{
				this._DokladnaData = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temat", DbType="VarChar(50)")]
	public string Temat
	{
		get
		{
			return this._Temat;
		}
		set
		{
			if ((this._Temat != value))
			{
				this._Temat = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Kursy")]
public partial class Kursy : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _KursID;
	
	private int _Jezyk;
	
	private int _Poziom;
	
	private int _Typ;
	
	private int _IDprowadzacego;
	
	private EntitySet<TestyZamkniete> _TestyZamkniete;
	
	private EntitySet<Materialy> _Materialy;
	
	private EntityRef<Jezyki> _Jezyki;
	
	private EntityRef<Poziomy> _Poziomy;
	
	private EntityRef<Users> _Users;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnKursIDChanging(int value);
    partial void OnKursIDChanged();
    partial void OnJezykChanging(int value);
    partial void OnJezykChanged();
    partial void OnPoziomChanging(int value);
    partial void OnPoziomChanged();
    partial void OnTypChanging(int value);
    partial void OnTypChanged();
    partial void OnIDprowadzacegoChanging(int value);
    partial void OnIDprowadzacegoChanged();
    #endregion
	
	public Kursy()
	{
		this._TestyZamkniete = new EntitySet<TestyZamkniete>(new Action<TestyZamkniete>(this.attach_TestyZamkniete), new Action<TestyZamkniete>(this.detach_TestyZamkniete));
		this._Materialy = new EntitySet<Materialy>(new Action<Materialy>(this.attach_Materialy), new Action<Materialy>(this.detach_Materialy));
		this._Jezyki = default(EntityRef<Jezyki>);
		this._Poziomy = default(EntityRef<Poziomy>);
		this._Users = default(EntityRef<Users>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KursID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int KursID
	{
		get
		{
			return this._KursID;
		}
		set
		{
			if ((this._KursID != value))
			{
				this.OnKursIDChanging(value);
				this.SendPropertyChanging();
				this._KursID = value;
				this.SendPropertyChanged("KursID");
				this.OnKursIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Jezyk", DbType="Int NOT NULL")]
	public int Jezyk
	{
		get
		{
			return this._Jezyk;
		}
		set
		{
			if ((this._Jezyk != value))
			{
				if (this._Jezyki.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnJezykChanging(value);
				this.SendPropertyChanging();
				this._Jezyk = value;
				this.SendPropertyChanged("Jezyk");
				this.OnJezykChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Poziom", DbType="Int NOT NULL")]
	public int Poziom
	{
		get
		{
			return this._Poziom;
		}
		set
		{
			if ((this._Poziom != value))
			{
				if (this._Poziomy.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnPoziomChanging(value);
				this.SendPropertyChanging();
				this._Poziom = value;
				this.SendPropertyChanged("Poziom");
				this.OnPoziomChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Typ", DbType="Int NOT NULL")]
	public int Typ
	{
		get
		{
			return this._Typ;
		}
		set
		{
			if ((this._Typ != value))
			{
				this.OnTypChanging(value);
				this.SendPropertyChanging();
				this._Typ = value;
				this.SendPropertyChanged("Typ");
				this.OnTypChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDprowadzacego", DbType="Int NOT NULL")]
	public int IDprowadzacego
	{
		get
		{
			return this._IDprowadzacego;
		}
		set
		{
			if ((this._IDprowadzacego != value))
			{
				if (this._Users.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDprowadzacegoChanging(value);
				this.SendPropertyChanging();
				this._IDprowadzacego = value;
				this.SendPropertyChanged("IDprowadzacego");
				this.OnIDprowadzacegoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kursy_TestyZamkniete", Storage="_TestyZamkniete", ThisKey="KursID", OtherKey="IDkursu")]
	public EntitySet<TestyZamkniete> TestyZamkniete
	{
		get
		{
			return this._TestyZamkniete;
		}
		set
		{
			this._TestyZamkniete.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kursy_Materialy", Storage="_Materialy", ThisKey="KursID", OtherKey="CourseID")]
	public EntitySet<Materialy> Materialy
	{
		get
		{
			return this._Materialy;
		}
		set
		{
			this._Materialy.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Jezyki_Kursy", Storage="_Jezyki", ThisKey="Jezyk", OtherKey="JezykID", IsForeignKey=true)]
	public Jezyki Jezyki
	{
		get
		{
			return this._Jezyki.Entity;
		}
		set
		{
			Jezyki previousValue = this._Jezyki.Entity;
			if (((previousValue != value) 
						|| (this._Jezyki.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Jezyki.Entity = null;
					previousValue.Kursy.Remove(this);
				}
				this._Jezyki.Entity = value;
				if ((value != null))
				{
					value.Kursy.Add(this);
					this._Jezyk = value.JezykID;
				}
				else
				{
					this._Jezyk = default(int);
				}
				this.SendPropertyChanged("Jezyki");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poziomy_Kursy", Storage="_Poziomy", ThisKey="Poziom", OtherKey="PoziomID", IsForeignKey=true)]
	public Poziomy Poziomy
	{
		get
		{
			return this._Poziomy.Entity;
		}
		set
		{
			Poziomy previousValue = this._Poziomy.Entity;
			if (((previousValue != value) 
						|| (this._Poziomy.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Poziomy.Entity = null;
					previousValue.Kursy.Remove(this);
				}
				this._Poziomy.Entity = value;
				if ((value != null))
				{
					value.Kursy.Add(this);
					this._Poziom = value.PoziomID;
				}
				else
				{
					this._Poziom = default(int);
				}
				this.SendPropertyChanged("Poziomy");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Kursy", Storage="_Users", ThisKey="IDprowadzacego", OtherKey="UserID", IsForeignKey=true)]
	public Users Users
	{
		get
		{
			return this._Users.Entity;
		}
		set
		{
			Users previousValue = this._Users.Entity;
			if (((previousValue != value) 
						|| (this._Users.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Users.Entity = null;
					previousValue.Kursy.Remove(this);
				}
				this._Users.Entity = value;
				if ((value != null))
				{
					value.Kursy.Add(this);
					this._IDprowadzacego = value.UserID;
				}
				else
				{
					this._IDprowadzacego = default(int);
				}
				this.SendPropertyChanged("Users");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TestyZamkniete(TestyZamkniete entity)
	{
		this.SendPropertyChanging();
		entity.Kursy = this;
	}
	
	private void detach_TestyZamkniete(TestyZamkniete entity)
	{
		this.SendPropertyChanging();
		entity.Kursy = null;
	}
	
	private void attach_Materialy(Materialy entity)
	{
		this.SendPropertyChanging();
		entity.Kursy = this;
	}
	
	private void detach_Materialy(Materialy entity)
	{
		this.SendPropertyChanging();
		entity.Kursy = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LangVersions")]
public partial class LangVersions : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private string _Name;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    #endregion
	
	public LangVersions()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(10)")]
	public string Name
	{
		get
		{
			return this._Name;
		}
		set
		{
			if ((this._Name != value))
			{
				this.OnNameChanging(value);
				this.SendPropertyChanging();
				this._Name = value;
				this.SendPropertyChanged("Name");
				this.OnNameChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Oceny")]
public partial class Oceny
{
	
	private int _UserID;
	
	private int _IDkursu;
	
	private int _Wartosc;
	
	private string _Comment;
	
	public Oceny()
	{
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", DbType="Int NOT NULL")]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this._UserID = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDkursu", DbType="Int NOT NULL")]
	public int IDkursu
	{
		get
		{
			return this._IDkursu;
		}
		set
		{
			if ((this._IDkursu != value))
			{
				this._IDkursu = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Wartosc", DbType="Int NOT NULL")]
	public int Wartosc
	{
		get
		{
			return this._Wartosc;
		}
		set
		{
			if ((this._Wartosc != value))
			{
				this._Wartosc = value;
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(1000)")]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this._Comment = value;
			}
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Poziomy")]
public partial class Poziomy : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _PoziomID;
	
	private string _Nazwa;
	
	private EntitySet<Kursy> _Kursy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnPoziomIDChanging(int value);
    partial void OnPoziomIDChanged();
    partial void OnNazwaChanging(string value);
    partial void OnNazwaChanged();
    #endregion
	
	public Poziomy()
	{
		this._Kursy = new EntitySet<Kursy>(new Action<Kursy>(this.attach_Kursy), new Action<Kursy>(this.detach_Kursy));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PoziomID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int PoziomID
	{
		get
		{
			return this._PoziomID;
		}
		set
		{
			if ((this._PoziomID != value))
			{
				this.OnPoziomIDChanging(value);
				this.SendPropertyChanging();
				this._PoziomID = value;
				this.SendPropertyChanged("PoziomID");
				this.OnPoziomIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwa", DbType="VarChar(2)")]
	public string Nazwa
	{
		get
		{
			return this._Nazwa;
		}
		set
		{
			if ((this._Nazwa != value))
			{
				this.OnNazwaChanging(value);
				this.SendPropertyChanging();
				this._Nazwa = value;
				this.SendPropertyChanged("Nazwa");
				this.OnNazwaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Poziomy_Kursy", Storage="_Kursy", ThisKey="PoziomID", OtherKey="Poziom")]
	public EntitySet<Kursy> Kursy
	{
		get
		{
			return this._Kursy;
		}
		set
		{
			this._Kursy.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Kursy(Kursy entity)
	{
		this.SendPropertyChanging();
		entity.Poziomy = this;
	}
	
	private void detach_Kursy(Kursy entity)
	{
		this.SendPropertyChanging();
		entity.Poziomy = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sites")]
public partial class Sites : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _SiteID;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSiteIDChanging(int value);
    partial void OnSiteIDChanged();
    #endregion
	
	public Sites()
	{
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SiteID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int SiteID
	{
		get
		{
			return this._SiteID;
		}
		set
		{
			if ((this._SiteID != value))
			{
				this.OnSiteIDChanging(value);
				this.SendPropertyChanging();
				this._SiteID = value;
				this.SendPropertyChanged("SiteID");
				this.OnSiteIDChanged();
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestyZamkniete")]
public partial class TestyZamkniete : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDtestu;
	
	private int _IDkursu;
	
	private string _Tytul;
	
	private string _Comment;
	
	private EntitySet<TestyZamknietePytania> _TestyZamknietePytania;
	
	private EntityRef<Kursy> _Kursy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDtestuChanging(int value);
    partial void OnIDtestuChanged();
    partial void OnIDkursuChanging(int value);
    partial void OnIDkursuChanged();
    partial void OnTytulChanging(string value);
    partial void OnTytulChanged();
    partial void OnCommentChanging(string value);
    partial void OnCommentChanged();
    #endregion
	
	public TestyZamkniete()
	{
		this._TestyZamknietePytania = new EntitySet<TestyZamknietePytania>(new Action<TestyZamknietePytania>(this.attach_TestyZamknietePytania), new Action<TestyZamknietePytania>(this.detach_TestyZamknietePytania));
		this._Kursy = default(EntityRef<Kursy>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDtestu", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDtestu
	{
		get
		{
			return this._IDtestu;
		}
		set
		{
			if ((this._IDtestu != value))
			{
				this.OnIDtestuChanging(value);
				this.SendPropertyChanging();
				this._IDtestu = value;
				this.SendPropertyChanged("IDtestu");
				this.OnIDtestuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDkursu", DbType="Int NOT NULL")]
	public int IDkursu
	{
		get
		{
			return this._IDkursu;
		}
		set
		{
			if ((this._IDkursu != value))
			{
				if (this._Kursy.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDkursuChanging(value);
				this.SendPropertyChanging();
				this._IDkursu = value;
				this.SendPropertyChanged("IDkursu");
				this.OnIDkursuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tytul", DbType="VarChar(15)")]
	public string Tytul
	{
		get
		{
			return this._Tytul;
		}
		set
		{
			if ((this._Tytul != value))
			{
				this.OnTytulChanging(value);
				this.SendPropertyChanging();
				this._Tytul = value;
				this.SendPropertyChanged("Tytul");
				this.OnTytulChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comment", DbType="VarChar(1000)")]
	public string Comment
	{
		get
		{
			return this._Comment;
		}
		set
		{
			if ((this._Comment != value))
			{
				this.OnCommentChanging(value);
				this.SendPropertyChanging();
				this._Comment = value;
				this.SendPropertyChanged("Comment");
				this.OnCommentChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestyZamkniete_TestyZamknietePytania", Storage="_TestyZamknietePytania", ThisKey="IDtestu", OtherKey="IDtestu")]
	public EntitySet<TestyZamknietePytania> TestyZamknietePytania
	{
		get
		{
			return this._TestyZamknietePytania;
		}
		set
		{
			this._TestyZamknietePytania.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kursy_TestyZamkniete", Storage="_Kursy", ThisKey="IDkursu", OtherKey="KursID", IsForeignKey=true)]
	public Kursy Kursy
	{
		get
		{
			return this._Kursy.Entity;
		}
		set
		{
			Kursy previousValue = this._Kursy.Entity;
			if (((previousValue != value) 
						|| (this._Kursy.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Kursy.Entity = null;
					previousValue.TestyZamkniete.Remove(this);
				}
				this._Kursy.Entity = value;
				if ((value != null))
				{
					value.TestyZamkniete.Add(this);
					this._IDkursu = value.KursID;
				}
				else
				{
					this._IDkursu = default(int);
				}
				this.SendPropertyChanged("Kursy");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_TestyZamknietePytania(TestyZamknietePytania entity)
	{
		this.SendPropertyChanging();
		entity.TestyZamkniete = this;
	}
	
	private void detach_TestyZamknietePytania(TestyZamknietePytania entity)
	{
		this.SendPropertyChanging();
		entity.TestyZamkniete = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TestyZamknietePytania")]
public partial class TestyZamknietePytania : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _IDtestu;
	
	private int _IDpytania;
	
	private string _Tresc;
	
	private EntitySet<WariantyOdpowiedzi> _WariantyOdpowiedzi;
	
	private EntityRef<TestyZamkniete> _TestyZamkniete;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDtestuChanging(int value);
    partial void OnIDtestuChanged();
    partial void OnIDpytaniaChanging(int value);
    partial void OnIDpytaniaChanged();
    partial void OnTrescChanging(string value);
    partial void OnTrescChanged();
    #endregion
	
	public TestyZamknietePytania()
	{
		this._WariantyOdpowiedzi = new EntitySet<WariantyOdpowiedzi>(new Action<WariantyOdpowiedzi>(this.attach_WariantyOdpowiedzi), new Action<WariantyOdpowiedzi>(this.detach_WariantyOdpowiedzi));
		this._TestyZamkniete = default(EntityRef<TestyZamkniete>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDtestu", DbType="Int NOT NULL")]
	public int IDtestu
	{
		get
		{
			return this._IDtestu;
		}
		set
		{
			if ((this._IDtestu != value))
			{
				if (this._TestyZamkniete.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnIDtestuChanging(value);
				this.SendPropertyChanging();
				this._IDtestu = value;
				this.SendPropertyChanged("IDtestu");
				this.OnIDtestuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDpytania", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int IDpytania
	{
		get
		{
			return this._IDpytania;
		}
		set
		{
			if ((this._IDpytania != value))
			{
				this.OnIDpytaniaChanging(value);
				this.SendPropertyChanging();
				this._IDpytania = value;
				this.SendPropertyChanged("IDpytania");
				this.OnIDpytaniaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tresc", DbType="VarChar(1000) NOT NULL", CanBeNull=false)]
	public string Tresc
	{
		get
		{
			return this._Tresc;
		}
		set
		{
			if ((this._Tresc != value))
			{
				this.OnTrescChanging(value);
				this.SendPropertyChanging();
				this._Tresc = value;
				this.SendPropertyChanged("Tresc");
				this.OnTrescChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestyZamknietePytania_WariantyOdpowiedzi", Storage="_WariantyOdpowiedzi", ThisKey="IDpytania", OtherKey="IDpytania")]
	public EntitySet<WariantyOdpowiedzi> WariantyOdpowiedzi
	{
		get
		{
			return this._WariantyOdpowiedzi;
		}
		set
		{
			this._WariantyOdpowiedzi.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TestyZamkniete_TestyZamknietePytania", Storage="_TestyZamkniete", ThisKey="IDtestu", OtherKey="IDtestu", IsForeignKey=true)]
	public TestyZamkniete TestyZamkniete
	{
		get
		{
			return this._TestyZamkniete.Entity;
		}
		set
		{
			TestyZamkniete previousValue = this._TestyZamkniete.Entity;
			if (((previousValue != value) 
						|| (this._TestyZamkniete.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._TestyZamkniete.Entity = null;
					previousValue.TestyZamknietePytania.Remove(this);
				}
				this._TestyZamkniete.Entity = value;
				if ((value != null))
				{
					value.TestyZamknietePytania.Add(this);
					this._IDtestu = value.IDtestu;
				}
				else
				{
					this._IDtestu = default(int);
				}
				this.SendPropertyChanged("TestyZamkniete");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_WariantyOdpowiedzi(WariantyOdpowiedzi entity)
	{
		this.SendPropertyChanging();
		entity.TestyZamknietePytania = this;
	}
	
	private void detach_WariantyOdpowiedzi(WariantyOdpowiedzi entity)
	{
		this.SendPropertyChanging();
		entity.TestyZamknietePytania = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Users")]
public partial class Users : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _UserID;
	
	private int _CzyAdmin;
	
	private string _Imie;
	
	private string _Nazwisko;
	
	private string _PhoneNumber;
	
	private string _PhoneCountryCode;
	
	private string _Street;
	
	private System.Nullable<int> _StreetNumber;
	
	private System.Nullable<int> _FlatNumber;
	
	private string _PostCode;
	
	private string _City;
	
	private string _PhoneAreaCode;
	
	private string _Login;
	
	private string _PasswordSalt;
	
	private string _PasswordHash;
	
	private string _E_mail;
	
	private EntitySet<Kursy> _Kursy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIDChanging(int value);
    partial void OnUserIDChanged();
    partial void OnCzyAdminChanging(int value);
    partial void OnCzyAdminChanged();
    partial void OnImieChanging(string value);
    partial void OnImieChanged();
    partial void OnNazwiskoChanging(string value);
    partial void OnNazwiskoChanged();
    partial void OnPhoneNumberChanging(string value);
    partial void OnPhoneNumberChanged();
    partial void OnPhoneCountryCodeChanging(string value);
    partial void OnPhoneCountryCodeChanged();
    partial void OnStreetChanging(string value);
    partial void OnStreetChanged();
    partial void OnStreetNumberChanging(System.Nullable<int> value);
    partial void OnStreetNumberChanged();
    partial void OnFlatNumberChanging(System.Nullable<int> value);
    partial void OnFlatNumberChanged();
    partial void OnPostCodeChanging(string value);
    partial void OnPostCodeChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnPhoneAreaCodeChanging(string value);
    partial void OnPhoneAreaCodeChanged();
    partial void OnLoginChanging(string value);
    partial void OnLoginChanged();
    partial void OnPasswordSaltChanging(string value);
    partial void OnPasswordSaltChanged();
    partial void OnPasswordHashChanging(string value);
    partial void OnPasswordHashChanged();
    partial void OnE_mailChanging(string value);
    partial void OnE_mailChanged();
    #endregion
	
	public Users()
	{
		this._Kursy = new EntitySet<Kursy>(new Action<Kursy>(this.attach_Kursy), new Action<Kursy>(this.detach_Kursy));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int UserID
	{
		get
		{
			return this._UserID;
		}
		set
		{
			if ((this._UserID != value))
			{
				this.OnUserIDChanging(value);
				this.SendPropertyChanging();
				this._UserID = value;
				this.SendPropertyChanged("UserID");
				this.OnUserIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CzyAdmin", DbType="Int NOT NULL")]
	public int CzyAdmin
	{
		get
		{
			return this._CzyAdmin;
		}
		set
		{
			if ((this._CzyAdmin != value))
			{
				this.OnCzyAdminChanging(value);
				this.SendPropertyChanging();
				this._CzyAdmin = value;
				this.SendPropertyChanged("CzyAdmin");
				this.OnCzyAdminChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Imie", DbType="NVarChar(15) NOT NULL", CanBeNull=false)]
	public string Imie
	{
		get
		{
			return this._Imie;
		}
		set
		{
			if ((this._Imie != value))
			{
				this.OnImieChanging(value);
				this.SendPropertyChanging();
				this._Imie = value;
				this.SendPropertyChanged("Imie");
				this.OnImieChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nazwisko", DbType="NVarChar(25) NOT NULL", CanBeNull=false)]
	public string Nazwisko
	{
		get
		{
			return this._Nazwisko;
		}
		set
		{
			if ((this._Nazwisko != value))
			{
				this.OnNazwiskoChanging(value);
				this.SendPropertyChanging();
				this._Nazwisko = value;
				this.SendPropertyChanged("Nazwisko");
				this.OnNazwiskoChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneNumber", DbType="VarChar(15)")]
	public string PhoneNumber
	{
		get
		{
			return this._PhoneNumber;
		}
		set
		{
			if ((this._PhoneNumber != value))
			{
				this.OnPhoneNumberChanging(value);
				this.SendPropertyChanging();
				this._PhoneNumber = value;
				this.SendPropertyChanged("PhoneNumber");
				this.OnPhoneNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneCountryCode", DbType="VarChar(2)")]
	public string PhoneCountryCode
	{
		get
		{
			return this._PhoneCountryCode;
		}
		set
		{
			if ((this._PhoneCountryCode != value))
			{
				this.OnPhoneCountryCodeChanging(value);
				this.SendPropertyChanging();
				this._PhoneCountryCode = value;
				this.SendPropertyChanged("PhoneCountryCode");
				this.OnPhoneCountryCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Street", DbType="NVarChar(60)")]
	public string Street
	{
		get
		{
			return this._Street;
		}
		set
		{
			if ((this._Street != value))
			{
				this.OnStreetChanging(value);
				this.SendPropertyChanging();
				this._Street = value;
				this.SendPropertyChanged("Street");
				this.OnStreetChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StreetNumber", DbType="Int")]
	public System.Nullable<int> StreetNumber
	{
		get
		{
			return this._StreetNumber;
		}
		set
		{
			if ((this._StreetNumber != value))
			{
				this.OnStreetNumberChanging(value);
				this.SendPropertyChanging();
				this._StreetNumber = value;
				this.SendPropertyChanged("StreetNumber");
				this.OnStreetNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlatNumber", DbType="Int")]
	public System.Nullable<int> FlatNumber
	{
		get
		{
			return this._FlatNumber;
		}
		set
		{
			if ((this._FlatNumber != value))
			{
				this.OnFlatNumberChanging(value);
				this.SendPropertyChanging();
				this._FlatNumber = value;
				this.SendPropertyChanged("FlatNumber");
				this.OnFlatNumberChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PostCode", DbType="VarChar(6)")]
	public string PostCode
	{
		get
		{
			return this._PostCode;
		}
		set
		{
			if ((this._PostCode != value))
			{
				this.OnPostCodeChanging(value);
				this.SendPropertyChanging();
				this._PostCode = value;
				this.SendPropertyChanged("PostCode");
				this.OnPostCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(30)")]
	public string City
	{
		get
		{
			return this._City;
		}
		set
		{
			if ((this._City != value))
			{
				this.OnCityChanging(value);
				this.SendPropertyChanging();
				this._City = value;
				this.SendPropertyChanged("City");
				this.OnCityChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PhoneAreaCode", DbType="VarChar(2)")]
	public string PhoneAreaCode
	{
		get
		{
			return this._PhoneAreaCode;
		}
		set
		{
			if ((this._PhoneAreaCode != value))
			{
				this.OnPhoneAreaCodeChanging(value);
				this.SendPropertyChanging();
				this._PhoneAreaCode = value;
				this.SendPropertyChanged("PhoneAreaCode");
				this.OnPhoneAreaCodeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Login", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
	public string Login
	{
		get
		{
			return this._Login;
		}
		set
		{
			if ((this._Login != value))
			{
				this.OnLoginChanging(value);
				this.SendPropertyChanging();
				this._Login = value;
				this.SendPropertyChanged("Login");
				this.OnLoginChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordSalt", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string PasswordSalt
	{
		get
		{
			return this._PasswordSalt;
		}
		set
		{
			if ((this._PasswordSalt != value))
			{
				this.OnPasswordSaltChanging(value);
				this.SendPropertyChanging();
				this._PasswordSalt = value;
				this.SendPropertyChanged("PasswordSalt");
				this.OnPasswordSaltChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PasswordHash", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string PasswordHash
	{
		get
		{
			return this._PasswordHash;
		}
		set
		{
			if ((this._PasswordHash != value))
			{
				this.OnPasswordHashChanging(value);
				this.SendPropertyChanging();
				this._PasswordHash = value;
				this.SendPropertyChanged("PasswordHash");
				this.OnPasswordHashChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[E-mail]", Storage="_E_mail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string E_mail
	{
		get
		{
			return this._E_mail;
		}
		set
		{
			if ((this._E_mail != value))
			{
				this.OnE_mailChanging(value);
				this.SendPropertyChanging();
				this._E_mail = value;
				this.SendPropertyChanged("E_mail");
				this.OnE_mailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Users_Kursy", Storage="_Kursy", ThisKey="UserID", OtherKey="IDprowadzacego")]
	public EntitySet<Kursy> Kursy
	{
		get
		{
			return this._Kursy;
		}
		set
		{
			this._Kursy.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Kursy(Kursy entity)
	{
		this.SendPropertyChanging();
		entity.Users = this;
	}
	
	private void detach_Kursy(Kursy entity)
	{
		this.SendPropertyChanging();
		entity.Users = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Materialy")]
public partial class Materialy : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _ID;
	
	private int _CourseID;
	
	private string _Title;
	
	private string _FilePath;
	
	private int _Type;
	
	private EntityRef<Kursy> _Kursy;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCourseIDChanging(int value);
    partial void OnCourseIDChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnFilePathChanging(string value);
    partial void OnFilePathChanged();
    partial void OnTypeChanging(int value);
    partial void OnTypeChanged();
    #endregion
	
	public Materialy()
	{
		this._Kursy = default(EntityRef<Kursy>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
	public int ID
	{
		get
		{
			return this._ID;
		}
		set
		{
			if ((this._ID != value))
			{
				this.OnIDChanging(value);
				this.SendPropertyChanging();
				this._ID = value;
				this.SendPropertyChanged("ID");
				this.OnIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CourseID", DbType="Int NOT NULL")]
	public int CourseID
	{
		get
		{
			return this._CourseID;
		}
		set
		{
			if ((this._CourseID != value))
			{
				if (this._Kursy.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnCourseIDChanging(value);
				this.SendPropertyChanging();
				this._CourseID = value;
				this.SendPropertyChanged("CourseID");
				this.OnCourseIDChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(MAX)")]
	public string Title
	{
		get
		{
			return this._Title;
		}
		set
		{
			if ((this._Title != value))
			{
				this.OnTitleChanging(value);
				this.SendPropertyChanging();
				this._Title = value;
				this.SendPropertyChanged("Title");
				this.OnTitleChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FilePath", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
	public string FilePath
	{
		get
		{
			return this._FilePath;
		}
		set
		{
			if ((this._FilePath != value))
			{
				this.OnFilePathChanging(value);
				this.SendPropertyChanging();
				this._FilePath = value;
				this.SendPropertyChanged("FilePath");
				this.OnFilePathChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int NOT NULL")]
	public int Type
	{
		get
		{
			return this._Type;
		}
		set
		{
			if ((this._Type != value))
			{
				this.OnTypeChanging(value);
				this.SendPropertyChanging();
				this._Type = value;
				this.SendPropertyChanged("Type");
				this.OnTypeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Kursy_Materialy", Storage="_Kursy", ThisKey="CourseID", OtherKey="KursID", IsForeignKey=true)]
	public Kursy Kursy
	{
		get
		{
			return this._Kursy.Entity;
		}
		set
		{
			Kursy previousValue = this._Kursy.Entity;
			if (((previousValue != value) 
						|| (this._Kursy.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Kursy.Entity = null;
					previousValue.Materialy.Remove(this);
				}
				this._Kursy.Entity = value;
				if ((value != null))
				{
					value.Materialy.Add(this);
					this._CourseID = value.KursID;
				}
				else
				{
					this._CourseID = default(int);
				}
				this.SendPropertyChanged("Kursy");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}
#pragma warning restore 1591
